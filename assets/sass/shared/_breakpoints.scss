$minimum-viewport-width: 320;
$mobile-breakpoint: 480;
$tablet-portrait-breakpoint: 768;
$tablet-landscape-breakpoint: 1024;

@mixin breakpoint($min-width: false, $max-width: false) {
  @if $min-width == false {
    $min-width: 0;
  }

  @if $max-width {
    @media (min-width: $min-width + 'px') and (max-width: $max-width + 'px') {
      @content;
    }
  }
  @else {
    @media (min-width: $min-width + 'px') {
      @content;
    }
  }
}

@mixin mobile-mq() {
  @include breakpoint($minimum-viewport-width, $mobile-breakpoint - 1) {
    @content;
  }
}

@mixin tablet-portrait-mq() {
  @include breakpoint($mobile-breakpoint, $tablet-portrait-breakpoint - 1) {
    @content;
  }
}

@mixin tablet-landscape-mq() {
  @include breakpoint($tablet-portrait-breakpoint, $tablet-landscape-breakpoint - 1) {
    @content;
  }
}

/** Both tablet orientations */
@mixin tablet-mq() {
  @include breakpoint($mobile-breakpoint, $tablet-landscape-breakpoint - 1) {
    @content;
  }
}

/** Greater than or equal to tablet portrait */
@mixin gte-tablet-portrait-mq() {
  @include breakpoint($mobile-breakpoint) {
    @content;
  }
}

/** Lower than or equal to tablet landscape */
@mixin lte-tablet-landscape-mq() {
  @include breakpoint(false, $tablet-landscape-breakpoint - 1) {
    @content;
  }
}

@mixin desktop-mq() {
  @include breakpoint($tablet-landscape-breakpoint) {
    @content;
  }
}
